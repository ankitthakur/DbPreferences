apply plugin: 'com.android.application'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'

static def getGitCommitCount() {
    def process = "git rev-list HEAD --count".execute()
    return process.text.toInteger()
}

def version = '1.0'

android {
    signingConfigs {
        release {
            keyAlias 'test'
            keyPassword 'testtest'
            storeFile file('test_release_keystore.jks')
            storePassword 'testtest'
        }
    }
    compileSdkVersion defaultCompileSdkVersion
    defaultConfig {
        applicationId "info.dbprefes.sample"
        minSdkVersion defaultMinSdkVersion
        targetSdkVersion defaultTargetSdkVersion
        versionCode getGitCommitCount()
        versionName version + "." + versionCode

        multiDexEnabled true
        testInstrumentationRunner = 'android.support.test.runner.AndroidJUnitRunner'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    dataBinding.enabled = true
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix ".debug"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), "$projectDir/proguard-rules.pro"
            //test apk will have proguard applied to it so we detect any crashes or anomalies during espresso tests
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), "$projectDir/proguard-rules.pro", "$projectDir/proguard-test-rules.pro"
            minifyEnabled true
            useProguard true
            shrinkResources true
        }
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), "$projectDir/proguard-rules.pro"
            //test apk will have proguard applied to it so we detect any crashes or anomalies during espresso tests
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), "$projectDir/proguard-rules.pro"
            minifyEnabled true
            useProguard true
            shrinkResources true
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:multidex:1.0.3'    // minsdk <= 20
    implementation "com.android.support:appcompat-v7:${defaultSupportLibVersion}"
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'org.reactivestreams:reactive-streams:1.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.2'
    implementation project(':DBPrefs')
    // room
    implementation 'com.commonsware.cwac:saferoom:0.4.4'
    implementation "android.arch.persistence.room:runtime:$room"
    kapt "android.arch.persistence.room:compiler:$roomruntime"
    implementation "android.arch.persistence.room:rxjava2:$room"
    androidTestImplementation "android.arch.persistence.room:testing:$room"
    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    //  UI testing with Espresso
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
